"use strict";(self.webpackChunkmoving_average_plus_docs=self.webpackChunkmoving_average_plus_docs||[]).push([[4988],{2010:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>n,default:()=>m,frontMatter:()=>s,metadata:()=>i,toc:()=>d});var o=a(4848),r=a(8453);const s={sidebar_position:1},n="\ud83d\udce6 Moving Average Methods",i={id:"mvavg-methods/intro",title:"\ud83d\udce6 Moving Average Methods",description:"The DataTomeMvAvg class abstracts the implementation of a circular array in order to calculate the arithmetic average of its members.",source:"@site/docs/mvavg-methods/intro.md",sourceDirName:"mvavg-methods",slug:"/mvavg-methods/intro",permalink:"/DataTomeDocs/docs/mvavg-methods/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/mvavg-methods/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Moving Average Methods",permalink:"/DataTomeDocs/docs/category/moving-average-methods"},next:{title:"\ud83d\udee0 Constructor",permalink:"/DataTomeDocs/docs/mvavg-methods/constructor"}},c={},d=[];function l(e){const t={a:"a",code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"-moving-average-methods",children:"\ud83d\udce6 Moving Average Methods"})}),"\n",(0,o.jsx)(t.p,{children:"The DataTomeMvAvg class abstracts the implementation of a circular array in order to calculate the arithmetic average of its members.\nBecause it is a circular array, the next input will replace the oldest element (represented by the first index), so it is also possible to call it a FIFO queue."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-cpp",children:"#include <DataTomeMvAvg.h>\n"})}),"\n",(0,o.jsx)(t.p,{children:"If you are used to the C++ Standard Library, it will be easier to learn the methods since they follow the same pattern of name and logic."}),"\n",(0,o.jsxs)(t.p,{children:["If you are looking for calculating a shorter average of the same data array more efficiently, check the new feature, ",(0,o.jsx)(t.a,{href:"pathname:///docs/mvavg-methods/partials/intro",children:"Partials"}),"."]})]})}function m(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>n,x:()=>i});var o=a(6540);const r={},s=o.createContext(r);function n(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);