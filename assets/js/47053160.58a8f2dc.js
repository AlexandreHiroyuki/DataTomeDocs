"use strict";(self.webpackChunkmoving_average_plus_docs=self.webpackChunkmoving_average_plus_docs||[]).push([[5047],{8585:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>n,metadata:()=>o,toc:()=>l});var r=a(4848),s=a(8453);const n={sidebar_position:1},i="\ud83d\udcca The Partials Concept",o={id:"mvavg-methods/partials/intro",title:"\ud83d\udcca The Partials Concept",description:"The Partials are a more efficient way of calculating the average of one data array partial sizes by avoiding the recalculation of the entire array every time.",source:"@site/docs/mvavg-methods/partials/intro.md",sourceDirName:"mvavg-methods/partials",slug:"/mvavg-methods/partials/intro",permalink:"/DataTomeDocs/docs/mvavg-methods/partials/intro",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/mvavg-methods/partials/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Partials",permalink:"/DataTomeDocs/docs/category/partials"},next:{title:"\ud83d\udee0 Partial Create",permalink:"/DataTomeDocs/docs/mvavg-methods/partials/partial-create"}},c={},l=[];function d(e){const t={h1:"h1",p:"p",strong:"strong",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.h1,{id:"-the-partials-concept",children:"\ud83d\udcca The Partials Concept"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.strong,{children:"Partials"})," are a ",(0,r.jsx)(t.strong,{children:"more efficient"})," way of calculating the average of one data array partial sizes by avoiding the recalculation of the entire array every time."]}),"\n",(0,r.jsxs)(t.p,{children:["When you create a ",(0,r.jsx)(t.strong,{children:"Partial"}),", the structure will create a ",(0,r.jsx)(t.strong,{children:"reactive variable"})," behind the scenes. The name reactive represents how the variables will automatically update their values without more instructions."]}),"\n",(0,r.jsxs)(t.p,{children:["It ",(0,r.jsx)(t.strong,{children:"avoids"})," creating a ",(0,r.jsx)(t.strong,{children:"new array"})," every time you want to calculate the average of a ",(0,r.jsx)(t.strong,{children:"different size of the same data"}),"."]}),"\n",(0,r.jsxs)(t.p,{children:["Reactive variables update reactively to push calls. Then, after creation, you ",(0,r.jsx)(t.strong,{children:"only need to care"})," about getting the ",(0,r.jsx)(t.strong,{children:"Partial result"}),"."]}),"\n",(0,r.jsx)(t.p,{children:"When a partial is created, the structure will return an ID that will be used to get the partial results."})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>o});var r=a(6540);const s={},n=r.createContext(s);function i(e){const t=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(n.Provider,{value:t},e.children)}}}]);