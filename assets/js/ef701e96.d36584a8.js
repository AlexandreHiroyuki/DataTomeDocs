"use strict";(self.webpackChunkmoving_average_plus_docs=self.webpackChunkmoving_average_plus_docs||[]).push([[784],{5680:(e,n,t)=>{t.d(n,{xA:()=>c,yg:()=>d});var r=t(6540);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var l=r.createContext({}),p=function(e){var n=r.useContext(l),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},c=function(e){var n=p(e.components);return r.createElement(l.Provider,{value:n},e.children)},m="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},y=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),m=p(t),y=a,d=m["".concat(l,".").concat(y)]||m[y]||u[y]||i;return t?r.createElement(d,o(o({ref:n},c),{},{components:t})):r.createElement(d,o({ref:n},c))}));function d(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,o=new Array(i);o[0]=y;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[m]="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=t[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,t)}y.displayName="MDXCreateElement"},8845:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=t(8168),a=(t(6540),t(5680));const i={sidebar_position:3},o="\u23ec Min",s={unversionedId:"analysis-methods/analysis/min",id:"analysis-methods/analysis/min",title:"\u23ec Min",description:"Returns the minimum value in the array.",source:"@site/docs/analysis-methods/analysis/min.md",sourceDirName:"analysis-methods/analysis",slug:"/analysis-methods/analysis/min",permalink:"/DataTomeDocs/docs/analysis-methods/analysis/min",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/analysis-methods/analysis/min.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udcc8 Count",permalink:"/DataTomeDocs/docs/analysis-methods/analysis/count"},next:{title:"\u23eb Max",permalink:"/DataTomeDocs/docs/analysis-methods/analysis/max"}},l={},p=[{value:"\ud83d\udcdd Syntax",id:"-syntax",level:3},{value:"\ud83d\udd2e Example",id:"-example",level:3},{value:"\u23f1 Complexity",id:"-complexity",level:3}],c={toc:p},m="wrapper";function u(e){let{components:n,...t}=e;return(0,a.yg)(m,(0,r.A)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.yg)("h1",{id:"-min"},"\u23ec Min"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Returns")," the ",(0,a.yg)("strong",{parentName:"p"},"minimum")," value in the ",(0,a.yg)("strong",{parentName:"p"},"array"),"."),(0,a.yg)("h3",{id:"-syntax"},"\ud83d\udcdd Syntax"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"TypeOfArray min()\n")),(0,a.yg)("h3",{id:"-example"},"\ud83d\udd2e Example"),(0,a.yg)("pre",null,(0,a.yg)("code",{parentName:"pre",className:"language-cpp"},"DataTomeAnalysis<int, long int> intAverage(10);\n\nfor(int i = 1; i < 5; i++){\n    intAverage.push(i);\n}\n\nintAverage.min(); // Will return 1\n")),(0,a.yg)("h3",{id:"-complexity"},"\u23f1 Complexity"),(0,a.yg)("p",null,(0,a.yg)("strong",{parentName:"p"},"Linear (O(n))")," in the ",(0,a.yg)("strong",{parentName:"p"},"point count"),"."))}u.isMDXComponent=!0}}]);