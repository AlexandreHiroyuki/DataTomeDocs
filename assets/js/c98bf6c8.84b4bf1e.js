"use strict";(self.webpackChunkmoving_average_plus_docs=self.webpackChunkmoving_average_plus_docs||[]).push([[4472],{8586:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"mvavg-methods/input-output/point-count","title":"\ud83d\udcc8 Point Count","description":"Returns the number of data points pushed in the array contributing to the average calculation.","source":"@site/docs/mvavg-methods/input-output/point-count.md","sourceDirName":"mvavg-methods/input-output","slug":"/mvavg-methods/input-output/point-count","permalink":"/DataTomeDocs/docs/mvavg-methods/input-output/point-count","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/mvavg-methods/input-output/point-count.md","tags":[],"version":"current","sidebarPosition":10,"frontMatter":{"sidebar_position":10},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udccf Size of Memory","permalink":"/DataTomeDocs/docs/mvavg-methods/input-output/size-of-memory"},"next":{"title":"Array Methods","permalink":"/DataTomeDocs/docs/category/array-methods"}}');var s=n(4848),r=n(8453);const i={sidebar_position:10},a="\ud83d\udcc8 Point Count",c={},u=[{value:"\ud83d\udcdd Syntax",id:"-syntax",level:3},{value:"\ud83d\udd2e Example",id:"-example",level:3},{value:"\u23f1 Complexity",id:"-complexity",level:3}];function p(e){const t={code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"-point-count",children:"\ud83d\udcc8 Point Count"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Returns"})," the ",(0,s.jsx)(t.strong,{children:"number of data points"})," pushed in the ",(0,s.jsx)(t.strong,{children:"array"})," contributing to the average calculation."]}),"\n",(0,s.jsx)(t.h3,{id:"-syntax",children:"\ud83d\udcdd Syntax"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"size_t point_count();\n"})}),"\n",(0,s.jsx)(t.h3,{id:"-example",children:"\ud83d\udd2e Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"DataTomeMvAvg<int> intAverage(10);\n\nintAverage.push(2);\n\nintAverage.point_count(); // Will return 1\n\nintAverage.push(5);\n\nintAverage.point_count(); // Will return 2\n"})}),"\n",(0,s.jsx)(t.h3,{id:"-complexity",children:"\u23f1 Complexity"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Constant (O(1))"}),"."]})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>a});var o=n(6540);const s={},r=o.createContext(s);function i(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);