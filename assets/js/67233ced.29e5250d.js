"use strict";(self.webpackChunkmoving_average_plus_docs=self.webpackChunkmoving_average_plus_docs||[]).push([[1546],{6168:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>l});var s=n(4848),o=n(8453);const r={sidebar_position:2},a="\ud83d\udee0 Constructor",i={id:"mvavg-methods/constructor",title:"\ud83d\udee0 Constructor",description:"\ud83d\udcdd Syntax",source:"@site/docs/mvavg-methods/constructor.md",sourceDirName:"mvavg-methods",slug:"/mvavg-methods/constructor",permalink:"/DataTomeDocs/docs/mvavg-methods/constructor",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/mvavg-methods/constructor.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"\ud83d\udce6 Moving Average Methods",permalink:"/DataTomeDocs/docs/mvavg-methods/intro"},next:{title:"Input/Output Methods",permalink:"/DataTomeDocs/docs/category/inputoutput-methods"}},c={},l=[{value:"\ud83d\udcdd Syntax",id:"-syntax",level:2},{value:"\ud83d\udd2e Example",id:"-example",level:2},{value:"\u23f1 Complexity",id:"-complexity",level:2}];function d(e){const t={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"-constructor",children:"\ud83d\udee0 Constructor"})}),"\n",(0,s.jsx)(t.h2,{id:"-syntax",children:"\ud83d\udcdd Syntax"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"// Passing only size as an argument\nDataTomeMvAvg<class TypeOfArray, class TypeOfSum> yourAverageName(size_t size);\n"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Template parameter"}),".\n",(0,s.jsx)(t.strong,{children:"TypeOfArray"})," is the ",(0,s.jsx)(t.strong,{children:"type of the array elements"}),".\n",(0,s.jsx)(t.strong,{children:"TypeOfSum"})," is the ",(0,s.jsx)(t.strong,{children:"type of the sum of the array elements"}),", it is equal to ",(0,s.jsx)(t.strong,{children:"TypeOfArray"})," by default."]}),"\n"]}),"\n",(0,s.jsxs)(t.ol,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Passing only size as an argument"}),".","\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["The class will create an array with the ",(0,s.jsx)(t.strong,{children:"size"})," passed as an argument and, by ",(0,s.jsx)(t.strong,{children:"default"}),", all positions will initialize with 0."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"-example",children:"\ud83d\udd2e Example"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-cpp",children:"// This will create an MovingAverage of size 10, int type, and acumulator type as int\nDataTomeMvAvg<int> intAverage(10);\n\n// This will create an MovingAverage of size 10, int type, and acumulator type as long int\nDataTomeMvAvg<int, long int> intAverage(10);\n"})}),"\n",(0,s.jsx)(t.h2,{id:"-complexity",children:"\u23f1 Complexity"}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Constant (O(1))"}),"."]})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>i});var s=n(6540);const o={},r=s.createContext(o);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);