"use strict";(self.webpackChunkmoving_average_plus_docs=self.webpackChunkmoving_average_plus_docs||[]).push([[8083],{3860:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"analysis-methods/constructor","title":"\ud83d\udee0 Constructor","description":"\ud83d\udcdd Syntax","source":"@site/docs/analysis-methods/constructor.md","sourceDirName":"analysis-methods","slug":"/analysis-methods/constructor","permalink":"/DataTomeDocs/docs/analysis-methods/constructor","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/analysis-methods/constructor.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"\ud83d\udce6 Analysis Methods","permalink":"/DataTomeDocs/docs/analysis-methods/intro"},"next":{"title":"Complete Array Methods","permalink":"/DataTomeDocs/docs/category/complete-array-methods"}}');var a=n(4848),r=n(8453);const o={sidebar_position:2},i="\ud83d\udee0 Constructor",l={},c=[{value:"\ud83d\udcdd Syntax",id:"-syntax",level:2},{value:"\ud83d\udd2e Example",id:"-example",level:2},{value:"\u23f1 Complexity",id:"-complexity",level:2}];function d(e){const s={blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsx)(s.h1,{id:"-constructor",children:"\ud83d\udee0 Constructor"})}),"\n",(0,a.jsx)(s.h2,{id:"-syntax",children:"\ud83d\udcdd Syntax"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-cpp",children:"// Passing only size as an argument\nDataTomeAnalysis<class TypeOfArray, class TypeOfSum> yourTimeseriesName(size_t size);\n"})}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Template parameter"}),".\n",(0,a.jsx)(s.strong,{children:"TypeOfArray"})," is the ",(0,a.jsx)(s.strong,{children:"type of the array elements"}),".\n",(0,a.jsx)(s.strong,{children:"TypeOfSum"})," is the ",(0,a.jsx)(s.strong,{children:"type of the sum of the array elements"}),", it is equal to ",(0,a.jsx)(s.strong,{children:"TypeOfArray"})," by default."]}),"\n"]}),"\n",(0,a.jsxs)(s.ol,{children:["\n",(0,a.jsxs)(s.li,{children:[(0,a.jsx)(s.strong,{children:"Passing only size as an argument"}),".","\n",(0,a.jsxs)(s.blockquote,{children:["\n",(0,a.jsxs)(s.p,{children:["The class will create an array with the ",(0,a.jsx)(s.strong,{children:"size"})," passed as an argument and, by ",(0,a.jsx)(s.strong,{children:"default"}),", all positions will initialize with 0."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(s.h2,{id:"-example",children:"\ud83d\udd2e Example"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{className:"language-cpp",children:"// This will create an MovingAverage of size 10, int type, and acumulator type as int\nDataTomeAnalysis<int> intAverage(10);\n\n// This will create an MovingAverage of size 10, int type, and acumulator type as long int\nDataTomeAnalysis<int, long int> intAverage(10);\n"})}),"\n",(0,a.jsx)(s.h2,{id:"-complexity",children:"\u23f1 Complexity"}),"\n",(0,a.jsxs)(s.p,{children:[(0,a.jsx)(s.strong,{children:"Constant (O(1))"}),"."]})]})}function u(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},8453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>i});var t=n(6540);const a={},r=t.createContext(a);function o(e){const s=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function i(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),t.createElement(r.Provider,{value:s},e.children)}}}]);