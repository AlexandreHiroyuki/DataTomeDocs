"use strict";(self.webpackChunkmoving_average_plus_docs=self.webpackChunkmoving_average_plus_docs||[]).push([[4239],{4046:(e,a,t)=>{t.r(a),t.d(a,{assets:()=>o,contentTitle:()=>l,default:()=>h,frontMatter:()=>n,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"analysis-methods/partials/analysis-partials","title":"\ud83d\udcca Analysis Partials","description":"The Partials are a more efficient way of calculating the average of one data array partial sizes by avoiding the recalculation of the entire array every time.","source":"@site/docs/analysis-methods/partials/analysis-partials.md","sourceDirName":"analysis-methods/partials","slug":"/analysis-methods/partials/analysis-partials","permalink":"/DataTomeDocs/docs/analysis-methods/partials/analysis-partials","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/analysis-methods/partials/analysis-partials.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Partial Array Methods","permalink":"/DataTomeDocs/docs/category/partial-array-methods"}}');var r=t(4848),i=t(8453);const n={sidebar_position:1},l="\ud83d\udcca Analysis Partials",o={},c=[{value:"\ud83d\udce6 Analysis Partials Methods",id:"-analysis-partials-methods",level:2}];function d(e){const a={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.header,{children:(0,r.jsx)(a.h1,{id:"-analysis-partials",children:"\ud83d\udcca Analysis Partials"})}),"\n",(0,r.jsxs)(a.p,{children:["The ",(0,r.jsx)(a.strong,{children:"Partials"})," are a ",(0,r.jsx)(a.strong,{children:"more efficient"})," way of calculating the average of one data array partial sizes by avoiding the recalculation of the entire array every time."]}),"\n",(0,r.jsxs)(a.p,{children:["When you create a ",(0,r.jsx)(a.strong,{children:"Partial"}),", the structure will create a ",(0,r.jsx)(a.strong,{children:"reactive variable"})," behind the scenes. The name reactive represents how the variables will automatically update their values without more instructions."]}),"\n",(0,r.jsxs)(a.p,{children:["It ",(0,r.jsx)(a.strong,{children:"avoids"})," creating a ",(0,r.jsx)(a.strong,{children:"new array"})," every time you want to calculate the average of a ",(0,r.jsx)(a.strong,{children:"different size of the same data"}),"."]}),"\n",(0,r.jsxs)(a.p,{children:["Reactive variables update reactively to push calls. Then, after creation, you ",(0,r.jsx)(a.strong,{children:"only need to care"})," about getting the ",(0,r.jsx)(a.strong,{children:"Partial result"}),"."]}),"\n",(0,r.jsx)(a.p,{children:"When a partial is created, the structure will return an ID that will be used to get the partial results."}),"\n",(0,r.jsx)(a.h2,{id:"-analysis-partials-methods",children:"\ud83d\udce6 Analysis Partials Methods"}),"\n",(0,r.jsxs)(a.p,{children:["Every method on Analysis follows the same pattern of name and logic, with a ",(0,r.jsx)(a.code,{children:"partial_"})," prefix and receive ",(0,r.jsx)(a.code,{children:"size_t partial_id"})," as an argument."]}),"\n",(0,r.jsx)(a.p,{children:"For example:"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{className:"language-cpp",children:"TypeOfArray partial_minimum(size_t partial_id);\n"})})]})}function h(e={}){const{wrapper:a}={...(0,i.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,a,t)=>{t.d(a,{R:()=>n,x:()=>l});var s=t(6540);const r={},i=s.createContext(r);function n(e){const a=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function l(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),s.createElement(i.Provider,{value:a},e.children)}}}]);